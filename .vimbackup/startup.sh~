#!/usr/bin/env bash
set -e
set -x
trap 'report_to_harpy failed ${LINENO}' ERR
# this script is executed on instance startup
# for instances that are based on harpy machine image

# use metadata api to fetch variables
# this is required since the instance is deploying itself
# without dynamic inventory

CLOUD_PROVIDER=digitalocean
INSTANCE_NAME="$(curl -s http://169.254.169.254/metadata/v1/hostname)"
PUBLIC_IP="$(curl -s http://169.254.169.254/metadata/v1/interfaces/public/0/ipv4/address)"
PUBLIC_IPV6="$(curl -s http://169.254.169.254/metadata/v1/interfaces/public/0/ipv6/address)"

REGION="do-$(curl -s http://169.254.169.254/metadata/v1/region | head -c -1)"
ZONE="do-$(curl -s http://169.254.169.254/metadata/v1/region)"

get_event_payload(){
   echo "{
    \"events\": [{
     \"type\": {
       \"group_name\": \"rkik\",
       \"group_version\":\"1\",
       \"event_name\": \"media_server_startup_script_status\"
     },
     \"payload\": {
         \"host\": {
                \"instance_name\": \"$INSTANCE_NAME\",
                \"server_ip\": \"$PUBLIC_IP\",
                \"region\": \"$REGION\",
                \"zone\": \"$ZONE\"
         },
         \"script_status\": \"$1\",
         \"error_line_number\": \"$2\"
         }
     }]
    }"
}

report_to_harpy(){
    json=$(get_event_payload $1 ${2-null})
    curl -XPOST http://events.rounds.video:80/backend/v2 -H "Content-Type: application/json" --data "$json"
}

report_to_harpy started
ANSIBLE_ROLES_PATH=$(dirname $1)/galaxy ansible-playbook \
    --extra-vars "cloud_provider=$CLOUD_PROVIDER cloud_instance_name=$INSTANCE_NAME cloud_public_ip=$PUBLIC_IP cloud_public_ipv6=$PUBLIC_IPV6 cloud_region=$REGION cloud_zone=$ZONE cloud_private_ip=none" \
    $1

report_to_harpy completed


