    #!/usr/bin/env python
"""check APNS service health."""

import json
import requests
import re

# fixes errors such as:
# UnicodeEncodeError: 'ascii' codec can't encode character u'\xfc' in position 9: ordinal not in range(128)
import sys
reload(sys)
sys.setdefaultencoding('utf-8')


# exit codes
OK = 0
WARNING = 1
CRITICAL = 2

JSONP_REGEX = '\((.*)\)'

if __name__ == '__main__':
    """use a hack we found to check for apns health.

    currently apple doesn't provide any feed to api to check for service
    status.
    however, they have an html page with a list of various services and their
    health.
    we have scanned this page's javascript and found out that the status for
    each service is fetched via a json function, which itself is fetched via
    a jsonp request

    we request this url, receiving the function, and parse it's content.
    it has a deep-level 'APNS' field, which if not-empty, means something is
    wrong.
    """
    try:
        # NOTE both of these statements can raise exceptions
        res = requests.get(url='https://www.apple.com/support/systemstatus/data/developer/system_status_en_US.js',
                           timeout=10)
        res.raise_for_status()
    except (requests.exceptions.HTTPError,
            requests.exceptions.Timeout) as e:
        print str(e)
        exit(WARNING)

    try:
        # Extract the json from the wrapping 'function(..)' part of the body
        # and fetch apns events
        extracted_json = re.search(JSONP_REGEX, res.text).group(1)
        data = json.loads(extracted_json)
        events = data['dashboard']['Services']['APNS']
    except (KeyError, ValueError) as e:
        print 'exception thrown: %s, response: %s' % (e, res.text)
        exit(WARNING)

    if len(events) > 0:
        print 'apns events: %s' % events
        exit(CRITICAL)

    print 'OK'
    exit(OK)
