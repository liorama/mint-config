<!DOCTYPE html>
<html>
	<body>
		<!-- 1. The <iframe> (and video player) will replace this <div> tag. -->
		<div id="player"></div>
		<div>Player Status: <span id="playerStatus"></span></div>
		<script>
			// 2. This code loads the IFrame Player API code asynchronously.
			var tag = document.createElement('script');

			tag.src = "https://www.youtube.com/iframe_api";
			var firstScriptTag = document.getElementsByTagName('script')[0];
			firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

			// 3. This function creates an <iframe> (and YouTube player)
			//    after the API code downloads.
			var player;
			function onYouTubeIframeAPIReady() {
				player = new YT.Player('player', {
					height: '100%',
					width: '100%',
					videoId: 'M7lc1UVf-VE',
					events: {
						'onReady': onPlayerReady,
						'onStateChange': onPlayerStateChange
					},
					playerVars: {
						modestbranding: 1,
						playsinline: 1,
						fs: 1,
						showinfo: 0
					}
				});
			}

			// 4. The API will call this function when the video player is ready.
			function onPlayerReady(event) {
				event.target.playVideo();
			}

			// 5. The API calls this function when the player's state changes.
			//    The function indicates that when playing a video (state=1),
			//    the player should play for six seconds and then stop.
		//	var done = false;
			function onPlayerStateChange(event) {
				var status = "";
				switch(event.data) {
					case YT.PlayerState.UNSTARTED:
						status = "UNSTARTED";
						break;
					case YT.PlayerState.PLAYING:
						status = "PLAYING";
						break;
					case YT.PlayerState.PAUSED:
						status = "PAUSED";
						break;
					case YT.PlayerState.BUFFERING:
						status = "BUFFERING";
						break;
					case YT.PlayerState.ENDED:
						status = "ENDED";
						break;
				}
					document.querySelector("#playerStatus").innerHTML  = status;
		/*
                    if (event.data == YT.PlayerState.PLAYING && !done) {
					setTimeout(stopVideo, 6000);
					done = true;
				}
			}
            */
			function stopVideo() {
				player.stopVideo();
			}
		</script>
	</body>
</html>
