#!/usr/bin/env python

import sys

import balancer
from balancer import server_status, MediaServer, regions
import config

import couchbase_client
from couchbase.bucket import Bucket

cfg = config.init()


BLUE = '\033[94m'
GREEN = '\033[92m'
ENDC = '\033[0m'

if __name__ == '__main__':
    if len(sys.argv) < 1:
        print 'usage: %s <value> [<identifier>=ip]' % sys.argv[0]
        print 'example \t%s 127.0.0.1' % sys.argv[0]
        print 'example \t%s 27 id' % sys.argv[0]
        print 'example \t%s www.god.com fqdn' % sys.argv[0]

    couchbase_client.init(
        buckets=[cfg['COUCHBASE_BUCKET'], cfg['COUCHBASE_CONFERENCES_BUCKET']],
        host=cfg['COUCHBASE_URLS'], connection_class=Bucket)

    balancer.init()

    value = sys.argv[1]
    if len(sys.argv) > 2:
        identifier = sys.argv[2]
    else:
        identifier = 'ip'

    servers = MediaServer.find(int(value), identifier)
    print "deleted (%s):" % (len(servers))
    for server in servers:
        server.delete()
        print '%s server id: %s %s %s server props: %s %s %s %s %s %s %s %s' % (
                            GREEN, BLUE, server.id, GREEN, BLUE, # Server id and colors
                            server.region, server.ip, server.fqdn, server.port, server.tls_port, server.status, ENDC) # props and color terminatorprint '%s server id: %s %s %s server props: %s %s %s %s %s %s %s %s' % (
